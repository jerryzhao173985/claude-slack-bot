name: Claude Code Direct API

on:
  workflow_dispatch:
    inputs:
      question:
        description: "User question from Slack"
        required: true
        type: string
      slack_channel:
        description: "Slack channel ID"
        required: true
        type: string
      slack_ts:
        description: "Slack message timestamp (placeholder)"
        required: true
        type: string
      slack_thread_ts:
        description: "Slack thread timestamp"
        required: false
        type: string

jobs:
  respond:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Process with Claude and Update Slack
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          # Prepare the question for JSON
          QUESTION=$(echo "${{ github.event.inputs.question }}" | jq -Rs .)
          
          # Call Claude API
          echo "Calling Claude API..."
          RESPONSE=$(curl -s https://api.anthropic.com/v1/messages \
            -H "x-api-key: $ANTHROPIC_API_KEY" \
            -H "anthropic-version: 2023-06-01" \
            -H "content-type: application/json" \
            -d "{
              \"model\": \"claude-3-5-sonnet-20241022\",
              \"max_tokens\": 2000,
              \"messages\": [{
                \"role\": \"user\",
                \"content\": $QUESTION
              }]
            }")
          
          # Extract the response text
          TEXT=$(echo "$RESPONSE" | jq -r '.content[0].text // empty')
          
          if [ -z "$TEXT" ]; then
            TEXT="I apologize, but I encountered an error processing your request. Please try again."
            echo "Error response from Claude:"
            echo "$RESPONSE" | jq '.'
          else
            echo "Claude responded successfully"
          fi
          
          # Escape the response for JSON
          ESCAPED_TEXT=$(echo "$TEXT" | jq -Rs .)
          
          # Update the Slack message
          echo "Updating Slack message..."
          UPDATE_RESPONSE=$(curl -s -X POST https://slack.com/api/chat.update \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"channel\": \"${{ github.event.inputs.slack_channel }}\",
              \"ts\": \"${{ github.event.inputs.slack_ts }}\",
              \"text\": $ESCAPED_TEXT
            }")
          
          # Check if update was successful
          if echo "$UPDATE_RESPONSE" | jq -e '.ok == true' > /dev/null 2>&1; then
            echo "✅ Successfully updated Slack message!"
          else
            echo "❌ Failed to update Slack message"
            echo "Error: $(echo "$UPDATE_RESPONSE" | jq -r '.error // "unknown"')"
            echo "Full response: $UPDATE_RESPONSE"
            
            # Post as a reply instead
            echo "Trying to post as reply..."
            THREAD_TS="${{ github.event.inputs.slack_thread_ts || github.event.inputs.slack_ts }}"
            
            REPLY_RESPONSE=$(curl -s -X POST https://slack.com/api/chat.postMessage \
              -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{
                \"channel\": \"${{ github.event.inputs.slack_channel }}\",
                \"thread_ts\": \"$THREAD_TS\",
                \"text\": $ESCAPED_TEXT
              }")
            
            if echo "$REPLY_RESPONSE" | jq -e '.ok == true' > /dev/null 2>&1; then
              echo "✅ Posted as reply successfully"
            else
              echo "❌ Failed to post reply"
              echo "Error: $(echo "$REPLY_RESPONSE" | jq -r '.error // "unknown"')"
            fi
          fi